{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","todos","setTodos","index","className","onClick","console","log","newTodos","filter","el","i","App","props","useState","value","setValue","value2","setValue2","placeholder","type","onChange","e","target","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAGMA,EAAO,SAAC,GACb,IADcC,EACf,EADeA,KAAKC,EACpB,EADoBA,MAAMC,EAC1B,EAD0BA,SAASC,EACnC,EADmCA,MAEjC,OACA,sBAAKC,UAAU,OAAf,UACA,6BAAKJ,IACL,wBACAK,QAAS,WAELC,QAAQC,IAAI,SAASP,GACrB,IAAMQ,EAAWP,EAAMQ,QAAO,SAACC,EAAGC,GAAJ,OAASA,IAAKR,KAC5CD,EAASM,IALb,wBAgDaI,MAnCf,SAAaC,GACX,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAyBJ,mBAAS,CAAC,qBAAnC,mBAAOb,EAAP,KAAaC,EAAb,KACA,OACE,sBAAKE,UAAU,MAAf,UACE,uBAAOe,YAAY,mBAAmBC,KAAK,OAAOC,SAAU,SAACC,GAE3DN,EAASM,EAAEC,OAAOR,QAEpBA,MAAOA,IAEP,uBACA,uBAAOI,YAAY,gBAAgBC,KAAK,SAASC,SAAU,SAACC,GAE1DJ,EAAUI,EAAEC,OAAON,SAErBA,OAAQA,IAER,uBACA,wBAAQZ,QAAS,WAEbH,EAAS,GAAD,mBAAKD,GAAL,CAAWc,EAAM,IAAKE,EAAO,eACrCD,EAAS,IACTE,EAAU,KAJd,iBAOCjB,EAAMuB,KAAI,SAACxB,EAAKG,GAAN,OACV,cAAC,EAAD,CAAkBH,KAAMA,EAAMC,MAAOA,EAAOC,SAAWA,EAAUC,MAAOA,GAA7DA,UCrCHsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f0983e6.chunk.js","sourcesContent":["import './App.css';\nimport React,{ useState } from 'react';\n\nconst Todo = ({todo,todos,setTodos,index}) =>\n{\n  return(\n  <div className=\"card\">\n  <h1>{todo}</h1> \n  <button\n  onClick={()=>\n    {\n      console.log(\"Delete\",todo);\n      const newTodos = todos.filter((el,i)=> i!== index);\n      setTodos(newTodos);\n    }\n  }>\n    Delete\n    </button>\n    </div>\n  );\n}\nfunction App(props) {\n  const [value,setValue] = useState(\"\");\n  const [value2,setValue2] = useState(\"\");\n  const [todos,setTodos] = useState([\"Apple 2 Calories\"]); \n  return (\n    <div className=\"App\">\n      <input placeholder=\"Enter Your Stuff\" type=\"text\" onChange={(e)=>\n      {\n        setValue(e.target.value)\n      }}\n      value={value}\n      />\n      <br/>\n      <input placeholder=\"Enter Calorie\" type=\"number\" onChange={(e)=>\n      {\n        setValue2(e.target.value2)\n      }}\n      value2={value2}\n      />\n      <br/>\n      <button onClick={()=>\n        {\n          setTodos([...todos,value+\" \" +value2+\" Calories\"]);\n          setValue(\"\");\n          setValue2(\"\");\n        }}>Add</button>\n\n      {todos.map((todo,index)=> (\n       <Todo key={index} todo={todo} todos={todos} setTodos ={setTodos} index={index}/>\n      ))}\n\n     </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}